AWSTemplateFormatVersion: '2010-09-09'

Outputs:
  Vpc:
    Value: !Ref Vpc
    Export:
      Name: !Sub "${AWS::StackName}-Vpc"
  AlbSecurityGroup:
    Value: !Ref AlbSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-AlbSecurityGroup"
  Az1PublicSubnet:
    Value: !Ref Az1PublicSubnet
    Export:
      Name: !Sub "${AWS::StackName}-Az1PublicSubnet"
  Az2PublicSubnet:
    Value: !Ref Az2PublicSubnet
    Export:
      Name: !Sub "${AWS::StackName}-Az2PublicSubnet"
  EcsClusterName:
    Value: !Ref EcsCluster
    Export:
      Name: !Sub "${AWS::StackName}-EcsClusterName"

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyEcsVPC

  Az1PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.1.0.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]

  Az2PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.1.1.0/24
      AvailabilityZone: !Select [ 1, !GetAZs ]

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc

  PublicRouteViaIgwRoute:
    Type: AWS::EC2::Route
    DependsOn: VpcGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  Az1PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Az1PublicSubnet
      RouteTableId: !Ref RouteTable

  Az2PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Az2PublicSubnet
      RouteTableId: !Ref RouteTable

  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: MyEcsCluster

  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ELB Allowed Ports
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  EcsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: ECS Allowed Ports
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: -1
          FromPort: 1
          ToPort: 65535
          SourceSecurityGroupId: !Ref AlbSecurityGroup

  EcsInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MyEcsInstanceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  EcsInstanceRoleInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: MyEcsInstanceRoleInstanceProfile
      Path: /
      Roles:
        - !Ref EcsInstanceRole

  EcsInstanceLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-9eb4b1e5
      InstanceType: t2.micro
      AssociatePublicIpAddress: true
      KeyName: !Ref AWS::NoValue
      SecurityGroups:
        - !Ref EcsSecurityGroup
      IamInstanceProfile: !GetAtt EcsInstanceRoleInstanceProfile.Arn
      UserData: !Base64
        "Fn::Sub": |
          #!/bin/bash
          echo ECS_CLUSTER=${EcsCluster} >> /etc/ecs/ecs.config

  EcsInstanceAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: [ !Join [",", [ !Ref Az1PublicSubnet, !Ref Az2PublicSubnet ]] ]
      LaunchConfigurationName: !Ref EcsInstanceLaunchConfiguration
      MinSize: "1"
      MaxSize: "1"
      DesiredCapacity: "1"
      Tags:
        - Key: Name
          Value: EcsInstanceAutoScalingGroup
          PropagateAtLaunch: true
