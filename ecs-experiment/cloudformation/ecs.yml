AWSTemplateFormatVersion: '2010-09-09'

Outputs:
  Vpc:
    Value: !Ref Vpc
    Export:
      Name: !Sub "${AWS::StackName}-Vpc"
  Az1PublicSubnet:
    Value: !Ref Az1PublicSubnet
    Export:
      Name: !Sub "${AWS::StackName}-Az1PublicSubnet"
  Az2PublicSubnet:
    Value: !Ref Az2PublicSubnet
    Export:
      Name: !Sub "${AWS::StackName}-Az2PublicSubnet"
  AlbSecurityGroup:
    Value: !Ref AlbSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-AlbSecurityGroup"
  EcsSecurityGroup:
    Value: !Ref EcsSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-EcsSecurityGroup"
  EcsCluster:
    Value: !Ref EcsCluster
    Export:
      Name: !Sub "${AWS::StackName}-EcsCluster"
  Ec2AppRepositoryName:
    Value: !Ref Ec2AppRepository
    Export:
      Name: !Sub "${AWS::StackName}-Ec2AppRepositoryName"
  Ec2AppRepositoryUrl:
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Ec2AppRepository}"
  FargateAppRepositoryName:
    Value: !Ref FargateAppRepository
    Export:
      Name: !Sub "${AWS::StackName}-FargateAppRepositoryName"
  FargateAppRepositoryUrl:
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${FargateAppRepository}"
  FargateAppWithDnsRepositoryName:
    Value: !Ref FargateAppWithDnsRepository
    Export:
      Name: !Sub "${AWS::StackName}-FargateAppWithDnsRepositoryName"
  FargateAppWithDnsRepositoryUrl:
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${FargateAppWithDnsRepository}"

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyEcsVPC

  Az1PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.1.0.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]

  Az2PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.1.1.0/24
      AvailabilityZone: !Select [ 1, !GetAZs ]

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc

  PublicRouteViaIgwRoute:
    Type: AWS::EC2::Route
    DependsOn: VpcGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  Az1PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Az1PublicSubnet
      RouteTableId: !Ref RouteTable

  Az2PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Az2PublicSubnet
      RouteTableId: !Ref RouteTable

  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ELB Allowed Ports
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  EcsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: ECS Allowed Ports
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: -1
          FromPort: 1
          ToPort: 65535
          SourceSecurityGroupId: !Ref AlbSecurityGroup

  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${AWS::StackName}-EcsCluster"

  Ec2AppRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: ec2-app
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "selection": {
                  "tagStatus": "tagged",
                  "tagPrefixList": [ "build" ],
                  "countType": "imageCountMoreThan",
                  "countNumber": 3
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  FargateAppRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: fargate-app
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "selection": {
                  "tagStatus": "tagged",
                  "tagPrefixList": [ "build" ],
                  "countType": "imageCountMoreThan",
                  "countNumber": 3
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  FargateAppWithDnsRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: fargate-app-with-dns
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "selection": {
                  "tagStatus": "tagged",
                  "tagPrefixList": [ "build" ],
                  "countType": "imageCountMoreThan",
                  "countNumber": 3
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
