Outputs:
  TestFunctionName:
    Value: !Ref TestFunction

  Username: # does not get substituted
    Value: !Sub "{{resolve:secretsmanager:${TestSecret}:SecretString:username}}"

  Password: # does not get substituted
    Value: !Sub "{{resolve:secretsmanager:${TestSecret}:SecretString:password}}"

Resources:
  TestFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole

  TestFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt TestFunctionRole.Arn
      Code:
        ZipFile: |
          exports.handler = (event, context, callback) => {
            callback(null, `username: ${process.env.USERNAME}, password: ${process.env.PASSWORD}`);
          };
      Runtime: nodejs8.10
      Timeout: 60
      Environment:
        Variables:
          USERNAME: !Sub "{{resolve:secretsmanager:${TestSecret}:SecretString:username}}"
          PASSWORD: !Sub "{{resolve:secretsmanager:${TestSecret}:SecretString:password}}"

  TestSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: TestSecret
      GenerateSecretString:
        SecretStringTemplate: '{"username": "someuser"}'
        GenerateStringKey: password
        PasswordLength: 30
